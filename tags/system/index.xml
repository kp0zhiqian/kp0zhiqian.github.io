<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>system on kp0zhiqian&#39;s</title>
    <link>https://kp0zhiqian.github.io/tags/system/</link>
    <description>Recent content in system on kp0zhiqian&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Zhiqian Guan</copyright>
    <lastBuildDate>Tue, 20 Oct 2020 00:11:23 +0800</lastBuildDate><atom:link href="https://kp0zhiqian.github.io/tags/system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Hugepage</title>
      <link>https://kp0zhiqian.github.io/posts/hugepage/</link>
      <pubDate>Tue, 20 Oct 2020 00:11:23 +0800</pubDate>
      
      <guid>https://kp0zhiqian.github.io/posts/hugepage/</guid>
      <description>Virtual Memory in Linux In a multi-task system, the operation to the memory of different processes will have conflict problems. To solve this problem, the concept of virtual memory comes. When the process starting, OS will assign virtual memory addresses for the process to use. Also, OS will map the virtual memory addresses to physical memory addresses. So we need to mapping the table to maintain the relationship between the virtual memory address and the physical memory address.</description>
    </item>
    
    <item>
      <title>Understanding DMA, IOMMU, and VFIO</title>
      <link>https://kp0zhiqian.github.io/posts/dma-iommu-vfio/</link>
      <pubDate>Fri, 04 Sep 2020 00:10:57 +0800</pubDate>
      
      <guid>https://kp0zhiqian.github.io/posts/dma-iommu-vfio/</guid>
      <description>DMA (Direct Memory Access) Generally speaking, the read and write operation of memory will all issue by the CPU. The read and write of memory of other devices must issue through the CPU. DMA, as in Direct Memory Access, will release the CPU from such a process. When devices need to r/w the memory, they will report to the CPU. The CPU will give the system bus to the DMA controller.</description>
    </item>
    
  </channel>
</rss>
