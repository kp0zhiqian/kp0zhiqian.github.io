<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on kp0zhiqian&#39;s</title>
    <link>https://kp0zhiqian.github.io/tags/leetcode/</link>
    <description>Recent content in leetcode on kp0zhiqian&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>You</copyright>
    <lastBuildDate>Wed, 28 Apr 2021 00:11:23 +0800</lastBuildDate><atom:link href="https://kp0zhiqian.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode记录</title>
      <link>https://kp0zhiqian.github.io/posts/leetcode-01/</link>
      <pubDate>Wed, 28 Apr 2021 00:11:23 +0800</pubDate>
      
      <guid>https://kp0zhiqian.github.io/posts/leetcode-01/</guid>
      <description>Leetcode记录 本文记录一下自己刷题的过程，从最简单的开始，语言使用python3
二进制求和 使用了int()把给定的字符串以二进制的base来识别给定的string，然后进行相加，再把相加后的数转成二进制，再把结果转成string，替换前边的0b
知识点 int()根据文档，第二个参数是base进制数，以什么样的进制来识别给定的字符串。 bin()负责把给定的int来转化成二进制数，在前边会有一个prefix &amp;lsquo;0b&amp;rsquo;
各位相加 class Solution: def addDigits(self, num: int) -&amp;gt; int: def cal(n): return (n//10) + (n % 10) while True: if num &amp;lt; 10: return num else: num = cal(num) 知识点 使用了递归的写法，每次递归获取个位和前边所有位的和，如果结果不小于10，那就继续递归，直到结果小于10返回</description>
    </item>
    
  </channel>
</rss>
